{"id":"node_modules/autolinker/dist/es2015/matcher/matcher.js","dependencies":[{"name":"/Users/evinsellin/code/homepage/node_modules/autolinker/dist/es2015/matcher/matcher.js.map","includedInParent":true,"mtime":1618113243145},{"name":"/Users/evinsellin/code/homepage/package.json","includedInParent":true,"mtime":1618121883607},{"name":"/Users/evinsellin/code/homepage/.babelrc","includedInParent":true,"mtime":1618113312087},{"name":"/Users/evinsellin/code/homepage/node_modules/autolinker/package.json","includedInParent":true,"mtime":1618113243145}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Matcher = void 0;\n\n/**\n * @abstract\n * @class Autolinker.matcher.Matcher\n *\n * An abstract class and interface for individual matchers to find matches in\n * an input string with linkified versions of them.\n *\n * Note that Matchers do not take HTML into account - they must be fed the text\n * nodes of any HTML string, which is handled by {@link Autolinker#parse}.\n */\nvar Matcher =\n/** @class */\nfunction () {\n  /**\n   * @method constructor\n   * @param {Object} cfg The configuration properties for the Matcher\n   *   instance, specified in an Object (map).\n   */\n  function Matcher(cfg) {\n    /**\n     * @cfg {Autolinker.AnchorTagBuilder} tagBuilder (required)\n     *\n     * Reference to the AnchorTagBuilder instance to use to generate HTML tags\n     * for {@link Autolinker.match.Match Matches}.\n     */\n    this.__jsduckDummyDocProp = null; // property used just to get the above doc comment into the ES5 output and documentation generator\n\n    this.tagBuilder = cfg.tagBuilder;\n  }\n\n  return Matcher;\n}();\n\nexports.Matcher = Matcher;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":8,"column":0}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":18,"column":0}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":18,"column":4}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":18,"column":11}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":19,"column":0}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":20,"column":0}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":20,"column":12}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":28,"column":1},"generated":{"line":21,"column":0}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":33,"column":1},"generated":{"line":26,"column":0}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":33,"column":1},"generated":{"line":26,"column":11}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":33,"column":1},"generated":{"line":26,"column":18}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":33,"column":14},"generated":{"line":26,"column":19}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":33,"column":1},"generated":{"line":26,"column":22}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":33,"column":32},"generated":{"line":26,"column":24}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":16,"column":1},"generated":{"line":27,"column":0}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":22,"column":9},"generated":{"line":33,"column":0}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":22,"column":9},"generated":{"line":33,"column":9}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":22,"column":9},"generated":{"line":33,"column":29}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":22,"column":32},"generated":{"line":33,"column":32}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":22,"column":9},"generated":{"line":33,"column":36}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":33,"column":32},"generated":{"line":33,"column":37}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":22,"column":39},"generated":{"line":33,"column":38}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":35,"column":0}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":35,"column":9}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":35,"column":19}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":34,"column":20},"generated":{"line":35,"column":22}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":34,"column":23},"generated":{"line":35,"column":25}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":34,"column":24},"generated":{"line":35,"column":26}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":35,"column":36}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":36,"column":0}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":38,"column":0}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":38,"column":9}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":38,"column":16}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":39,"column":0}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":39,"column":1}},{"source":"../src/matcher/matcher.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":39,"column":3}}],"sources":{"../src/matcher/matcher.ts":"import { AnchorTagBuilder } from \"../anchor-tag-builder\";\nimport { Match } from \"../match/match\";\n\n/**\n * @abstract\n * @class Autolinker.matcher.Matcher\n *\n * An abstract class and interface for individual matchers to find matches in\n * an input string with linkified versions of them.\n *\n * Note that Matchers do not take HTML into account - they must be fed the text\n * nodes of any HTML string, which is handled by {@link Autolinker#parse}.\n */\nexport abstract class Matcher {\n\n\t/**\n\t * @cfg {Autolinker.AnchorTagBuilder} tagBuilder (required)\n\t *\n\t * Reference to the AnchorTagBuilder instance to use to generate HTML tags\n\t * for {@link Autolinker.match.Match Matches}.\n\t */\n\tprivate __jsduckDummyDocProp = null;  // property used just to get the above doc comment into the ES5 output and documentation generator\n\n\t// Actual property for the above jsdoc comment\n\tprotected tagBuilder: AnchorTagBuilder;\n\n\n\t/**\n\t * @method constructor\n\t * @param {Object} cfg The configuration properties for the Matcher\n\t *   instance, specified in an Object (map).\n\t */\n\tconstructor( cfg: MatcherConfig ) {\n\t\tthis.tagBuilder = cfg.tagBuilder;\n\t}\n\n\n\t/**\n\t * Parses the input `text` and returns the array of {@link Autolinker.match.Match Matches}\n\t * for the matcher.\n\t *\n\t * @abstract\n\t * @param {String} text The text to scan and replace matches in.\n\t * @return {Autolinker.match.Match[]}\n\t */\n\tabstract parseMatches( text: string ): Match[];\n\n}\n\nexport interface MatcherConfig {\n\ttagBuilder: AnchorTagBuilder;\n}"},"lineCount":null}},"error":null,"hash":"58505b1b685cad3163641b2917213348","cacheData":{"env":{}}}